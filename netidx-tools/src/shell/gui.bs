mod gui {
  type Color = [
    `Reset,
    `Black,
    `Red,
    `Green,
    `Yellow,
    `Blue,
    `Magenta,
    `Cyan,
    `Gray,
    `DarkGray,
    `LightRed,
    `LightGreen,
    `LightYellow,
    `LightBlue,
    `LightMagenta,
    `LightCyan,
    `White,
    `Rgb({ r: u32, g: u32, b: u32 }), // r, g, b, range 0-255
    `Indexed(u32) // max 255
  ];

  type Modifier = [
    `Bold,
    `Italic
  ];

  type Alignment = [
    `Left,
    `Center,
    `Right
  ];

  type Style = {
    fg: [Color, null],
    bg: [Color, null],
    underline_color: [Color, null],
    add_modifier: [Modifier, null]
    sub_modifier: [Modifier, null]
  };

  let style: Style = {
    fg: null,
    bg: null,
    underline_color: null,
    add_modifier: null,
    sub_modifier: null
  };

  type Span = {
    style: Style,
    content: Any
  };

  let span: Span = {
    style: style,
    content: ""
  };

  type Line = {
    style: Style,
    alignment: [Alignment, null],
    spans: Array<Span>
  };

  let line = {
    style,
    alignment: null,
    spans: []
  };

  // The type of a gui, return this type from a shell expression to draw a gui
  type Gui = [
    `Text({ lines: &[Array<Line>, string] })
  ]
}
